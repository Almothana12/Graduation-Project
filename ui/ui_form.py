# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/almothana/Documents/Project.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(767, 776)
        font = QtGui.QFont()
        font.setPointSize(10)
        MainWindow.setFont(font)
        MainWindow.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        MainWindow.setMouseTracking(False)
        MainWindow.setWindowOpacity(1.0)
        MainWindow.setStatusTip("")
        MainWindow.setWhatsThis("")
        MainWindow.setAutoFillBackground(False)
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setEnabled(True)
        self.progressBar.setAcceptDrops(False)
        self.progressBar.setAutoFillBackground(False)
        self.progressBar.setMinimum(0)
        self.progressBar.setMaximum(0)
        self.progressBar.setProperty("value", 0)
        self.progressBar.setTextVisible(True)
        self.progressBar.setInvertedAppearance(False)
        self.progressBar.setObjectName("progressBar")
        self.gridLayout.addWidget(self.progressBar, 1, 1, 1, 1)
        self.mainFrame = QtWidgets.QFrame(self.centralwidget)
        self.mainFrame.setStyleSheet(".QFrame { border: 0; }")
        self.mainFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.mainFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.mainFrame.setObjectName("mainFrame")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.mainFrame)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.InputFrame = QtWidgets.QFrame(self.mainFrame)
        self.InputFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.InputFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.InputFrame.setObjectName("InputFrame")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.InputFrame)
        self.gridLayout_5.setObjectName("gridLayout_5")
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem, 1, 1, 1, 1)
        self.InputLayout = QtWidgets.QGridLayout()
        self.InputLayout.setObjectName("InputLayout")
        self.horizontalFrame = QtWidgets.QFrame(self.InputFrame)
        self.horizontalFrame.setObjectName("horizontalFrame")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalFrame)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.qucikScanRadioButton = QtWidgets.QRadioButton(self.horizontalFrame)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.qucikScanRadioButton.setFont(font)
        self.qucikScanRadioButton.setWhatsThis("")
        self.qucikScanRadioButton.setChecked(True)
        self.qucikScanRadioButton.setObjectName("qucikScanRadioButton")
        self.horizontalLayout.addWidget(self.qucikScanRadioButton)
        self.fullScanRadioButton = QtWidgets.QRadioButton(self.horizontalFrame)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.fullScanRadioButton.setFont(font)
        self.fullScanRadioButton.setObjectName("fullScanRadioButton")
        self.horizontalLayout.addWidget(self.fullScanRadioButton)
        self.customScanRadioButton = QtWidgets.QRadioButton(self.horizontalFrame)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.customScanRadioButton.setFont(font)
        self.customScanRadioButton.setObjectName("customScanRadioButton")
        self.horizontalLayout.addWidget(self.customScanRadioButton)
        self.InputLayout.addWidget(self.horizontalFrame, 3, 0, 2, 1)
        self.urlLayout = QtWidgets.QVBoxLayout()
        self.urlLayout.setObjectName("urlLayout")
        self.urlLabel = QtWidgets.QLabel(self.InputFrame)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.urlLabel.setFont(font)
        self.urlLabel.setAutoFillBackground(False)
        self.urlLabel.setLineWidth(3)
        self.urlLabel.setAlignment(QtCore.Qt.AlignCenter)
        self.urlLabel.setObjectName("urlLabel")
        self.urlLayout.addWidget(self.urlLabel)
        self.urlLineEdit = QtWidgets.QLineEdit(self.InputFrame)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.urlLineEdit.setFont(font)
        self.urlLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.urlLineEdit.setPlaceholderText("example.com")
        self.urlLineEdit.setObjectName("urlLineEdit")
        self.urlLayout.addWidget(self.urlLineEdit)
        self.frame = QtWidgets.QFrame(self.InputFrame)
        self.frame.setObjectName("frame")
        self.crawlLayout = QtWidgets.QHBoxLayout(self.frame)
        self.crawlLayout.setObjectName("crawlLayout")
        self.OnePageRadioButton = QtWidgets.QRadioButton(self.frame)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.OnePageRadioButton.setFont(font)
        self.OnePageRadioButton.setChecked(True)
        self.OnePageRadioButton.setObjectName("OnePageRadioButton")
        self.crawlLayout.addWidget(self.OnePageRadioButton)
        self.allPagesRadioButton = QtWidgets.QRadioButton(self.frame)
        self.allPagesRadioButton.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.allPagesRadioButton.setFont(font)
        self.allPagesRadioButton.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.allPagesRadioButton.setAutoFillBackground(False)
        self.allPagesRadioButton.setObjectName("allPagesRadioButton")
        self.crawlLayout.addWidget(self.allPagesRadioButton)
        self.urlLayout.addWidget(self.frame)
        self.InputLayout.addLayout(self.urlLayout, 0, 0, 1, 1)
        self.cookieLayout = QtWidgets.QVBoxLayout()
        self.cookieLayout.setObjectName("cookieLayout")
        self.cookieLabel = QtWidgets.QLabel(self.InputFrame)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.cookieLabel.setFont(font)
        self.cookieLabel.setAutoFillBackground(False)
        self.cookieLabel.setLineWidth(3)
        self.cookieLabel.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.cookieLabel.setObjectName("cookieLabel")
        self.cookieLayout.addWidget(self.cookieLabel)
        self.cookieLineEdit = QtWidgets.QLineEdit(self.InputFrame)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.cookieLineEdit.setFont(font)
        self.cookieLineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.cookieLineEdit.setObjectName("cookieLineEdit")
        self.cookieLayout.addWidget(self.cookieLineEdit)
        self.InputLayout.addLayout(self.cookieLayout, 1, 0, 1, 1)
        self.optionsLayout = QtWidgets.QGridLayout()
        self.optionsLayout.setObjectName("optionsLayout")
        self.dataCheckBox = QtWidgets.QCheckBox(self.InputFrame)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.dataCheckBox.setFont(font)
        self.dataCheckBox.setChecked(True)
        self.dataCheckBox.setAutoRepeat(False)
        self.dataCheckBox.setObjectName("dataCheckBox")
        self.optionsLayout.addWidget(self.dataCheckBox, 11, 0, 1, 1)
        self.xssFormLayout = QtWidgets.QFormLayout()
        self.xssFormLayout.setObjectName("xssFormLayout")
        self.domLayout = QtWidgets.QHBoxLayout()
        self.domLayout.setObjectName("domLayout")
        spacerItem1 = QtWidgets.QSpacerItem(40, 1, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.domLayout.addItem(spacerItem1)
        self.domCheckBox = QtWidgets.QCheckBox(self.InputFrame)
        self.domCheckBox.setMinimumSize(QtCore.QSize(276, 0))
        self.domCheckBox.setObjectName("domCheckBox")
        self.domLayout.addWidget(self.domCheckBox)
        self.xssFormLayout.setLayout(1, QtWidgets.QFormLayout.LabelRole, self.domLayout)
        self.optionsLayout.addLayout(self.xssFormLayout, 7, 0, 1, 1)
        self.ciFormLayout = QtWidgets.QFormLayout()
        self.ciFormLayout.setObjectName("ciFormLayout")
        self.ciTimeLayout = QtWidgets.QHBoxLayout()
        self.ciTimeLayout.setObjectName("ciTimeLayout")
        spacerItem2 = QtWidgets.QSpacerItem(40, 1, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.ciTimeLayout.addItem(spacerItem2)
        self.ciTimeCheckBox = QtWidgets.QCheckBox(self.InputFrame)
        self.ciTimeCheckBox.setMinimumSize(QtCore.QSize(276, 0))
        self.ciTimeCheckBox.setObjectName("ciTimeCheckBox")
        self.ciTimeLayout.addWidget(self.ciTimeCheckBox)
        self.ciFormLayout.setLayout(0, QtWidgets.QFormLayout.LabelRole, self.ciTimeLayout)
        self.optionsLayout.addLayout(self.ciFormLayout, 10, 0, 1, 1)
        self.versionCheckBox = QtWidgets.QCheckBox(self.InputFrame)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.versionCheckBox.setFont(font)
        self.versionCheckBox.setChecked(True)
        self.versionCheckBox.setObjectName("versionCheckBox")
        self.optionsLayout.addWidget(self.versionCheckBox, 12, 0, 1, 1)
        self.sqlFormLayout = QtWidgets.QFormLayout()
        self.sqlFormLayout.setObjectName("sqlFormLayout")
        self.sqlTimeLayout = QtWidgets.QHBoxLayout()
        self.sqlTimeLayout.setObjectName("sqlTimeLayout")
        spacerItem3 = QtWidgets.QSpacerItem(40, 0, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.sqlTimeLayout.addItem(spacerItem3)
        self.sqlTimeCheckBox = QtWidgets.QCheckBox(self.InputFrame)
        self.sqlTimeCheckBox.setEnabled(True)
        self.sqlTimeCheckBox.setMinimumSize(QtCore.QSize(276, 0))
        self.sqlTimeCheckBox.setMaximumSize(QtCore.QSize(276, 16777215))
        self.sqlTimeCheckBox.setCheckable(True)
        self.sqlTimeCheckBox.setObjectName("sqlTimeCheckBox")
        self.sqlTimeLayout.addWidget(self.sqlTimeCheckBox)
        self.sqlFormLayout.setLayout(2, QtWidgets.QFormLayout.LabelRole, self.sqlTimeLayout)
        self.optionsLayout.addLayout(self.sqlFormLayout, 0, 0, 1, 1)
        self.ciCheckBox = QtWidgets.QCheckBox(self.InputFrame)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.ciCheckBox.setFont(font)
        self.ciCheckBox.setChecked(True)
        self.ciCheckBox.setObjectName("ciCheckBox")
        self.optionsLayout.addWidget(self.ciCheckBox, 8, 0, 1, 1)
        self.xssCheckBox = QtWidgets.QCheckBox(self.InputFrame)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.xssCheckBox.setFont(font)
        self.xssCheckBox.setChecked(True)
        self.xssCheckBox.setObjectName("xssCheckBox")
        self.optionsLayout.addWidget(self.xssCheckBox, 1, 0, 1, 1)
        self.InputLayout.addLayout(self.optionsLayout, 6, 0, 1, 1)
        self.sqliCheckBox = QtWidgets.QCheckBox(self.InputFrame)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.sqliCheckBox.setFont(font)
        self.sqliCheckBox.setChecked(True)
        self.sqliCheckBox.setObjectName("sqliCheckBox")
        self.InputLayout.addWidget(self.sqliCheckBox, 5, 0, 1, 1)
        self.buttonLayout = QtWidgets.QHBoxLayout()
        self.buttonLayout.setObjectName("buttonLayout")
        self.scanButton = QtWidgets.QPushButton(self.InputFrame)
        self.scanButton.setMinimumSize(QtCore.QSize(130, 0))
        self.scanButton.setMaximumSize(QtCore.QSize(150, 16777215))
        font = QtGui.QFont()
        font.setPointSize(16)
        font.setBold(False)
        font.setWeight(50)
        self.scanButton.setFont(font)
        self.scanButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.scanButton.setObjectName("scanButton")
        self.buttonLayout.addWidget(self.scanButton)
        self.InputLayout.addLayout(self.buttonLayout, 8, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(20, 15, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.InputLayout.addItem(spacerItem4, 2, 0, 1, 1)
        self.gridLayout_5.addLayout(self.InputLayout, 0, 1, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(40, 30, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem5, 0, 2, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem6, 0, 0, 1, 1)
        self.gridLayout_6.addWidget(self.InputFrame, 0, 0, 1, 1)
        self.gridLayout.addWidget(self.mainFrame, 0, 1, 1, 1)
        self.logLayout = QtWidgets.QGridLayout()
        self.logLayout.setObjectName("logLayout")
        self.gridLayout.addLayout(self.logLayout, 2, 1, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(120, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem7, 1, 2, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(120, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem8, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 767, 30))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setMenuRole(QtWidgets.QAction.QuitRole)
        self.actionExit.setObjectName("actionExit")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setCheckable(False)
        self.actionPaste.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionPaste.setObjectName("actionPaste")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setObjectName("actionHelp")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionAbout_Qt = QtWidgets.QAction(MainWindow)
        self.actionAbout_Qt.setObjectName("actionAbout_Qt")
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuHelp.addAction(self.actionHelp)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionAbout_Qt)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.actionExit.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.qucikScanRadioButton.setToolTip(_translate("MainWindow", "Scan for all vulnerabilities but without DOM-based or time-based methods and less payloads"))
        self.qucikScanRadioButton.setStatusTip(_translate("MainWindow", "Scan for all vulnerabilities but without DOM-based or time-based methods and less payloads"))
        self.qucikScanRadioButton.setText(_translate("MainWindow", "Quick Scan"))
        self.fullScanRadioButton.setToolTip(_translate("MainWindow", "Scan for all vulnerabilities using DOM-based and time-based methods and more payloads"))
        self.fullScanRadioButton.setStatusTip(_translate("MainWindow", "Scan for all vulnerabilities using DOM-based and time-based methods and more payloads"))
        self.fullScanRadioButton.setText(_translate("MainWindow", "Full Scan"))
        self.customScanRadioButton.setToolTip(_translate("MainWindow", "Choose the vulnerabilites to scan for"))
        self.customScanRadioButton.setStatusTip(_translate("MainWindow", "Choose the vulnerabilites to scan for"))
        self.customScanRadioButton.setText(_translate("MainWindow", "Custom"))
        self.urlLabel.setStatusTip(_translate("MainWindow", "URL to be scanned for vulnerabilities"))
        self.urlLabel.setText(_translate("MainWindow", "URL"))
        self.urlLineEdit.setStatusTip(_translate("MainWindow", "URL to be scanned for vulnerabilities"))
        self.OnePageRadioButton.setToolTip(_translate("MainWindow", "Check for vulnerabilities in the specified page only"))
        self.OnePageRadioButton.setStatusTip(_translate("MainWindow", "Check for vulnerabilities in the specified page only"))
        self.OnePageRadioButton.setText(_translate("MainWindow", "This page only"))
        self.allPagesRadioButton.setToolTip(_translate("MainWindow", "Check for vlunerabilities in the entire website"))
        self.allPagesRadioButton.setStatusTip(_translate("MainWindow", "Crawl entire website to look for vulnerabilities"))
        self.allPagesRadioButton.setText(_translate("MainWindow", "All pages"))
        self.cookieLabel.setStatusTip(_translate("MainWindow", "Cookie to be sent with the request"))
        self.cookieLabel.setText(_translate("MainWindow", "Cookie (optional)"))
        self.cookieLineEdit.setStatusTip(_translate("MainWindow", "Cookie to be sent with the request"))
        self.cookieLineEdit.setPlaceholderText(_translate("MainWindow", "name=value; name=value"))
        self.dataCheckBox.setStatusTip(_translate("MainWindow", "Scan for potential private data such as phone numbers and Emails."))
        self.dataCheckBox.setText(_translate("MainWindow", "Private Data"))
        self.domCheckBox.setStatusTip(_translate("MainWindow", "Scan of XSS using DOM-based method. takes longer to scan."))
        self.domCheckBox.setText(_translate("MainWindow", "DOM-Based Detection"))
        self.ciTimeCheckBox.setStatusTip(_translate("MainWindow", "Scan of command injection using time-based method. takes longer to scan."))
        self.ciTimeCheckBox.setText(_translate("MainWindow", "Time-Based Detection"))
        self.versionCheckBox.setStatusTip(_translate("MainWindow", "Scan for server versions in the HTTP response header"))
        self.versionCheckBox.setText(_translate("MainWindow", "Server Version Headers"))
        self.sqlTimeCheckBox.setStatusTip(_translate("MainWindow", "Scan of SQL injection using time-based method. takes longer to scan."))
        self.sqlTimeCheckBox.setText(_translate("MainWindow", "Time-Based Detection"))
        self.ciCheckBox.setText(_translate("MainWindow", "Command Injection"))
        self.xssCheckBox.setText(_translate("MainWindow", "Cross-Site Scripting"))
        self.sqliCheckBox.setText(_translate("MainWindow", "SQL Injection"))
        self.scanButton.setText(_translate("MainWindow", "Scan"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setStatusTip(_translate("MainWindow", "Close the Application"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionCopy.setStatusTip(_translate("MainWindow", "Copy Text"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionPaste.setStatusTip(_translate("MainWindow", "Paste Text"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionHelp.setShortcut(_translate("MainWindow", "F1"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionAbout_Qt.setText(_translate("MainWindow", "About Qt"))
